{"version":3,"sources":["theme/theme.js","global/GlobalStyles.js","reducers/UserReducer.js","contexts/UserContext.js","reducers/ActivityReducer.js","contexts/ActivityContext.js","functions/activity/cloud/activityFunctions.js","components/Navbar.js","reducers/DayReducer.js","contexts/DayContext.js","components/Day.js","pages/Main.js","components/ActivityCard.js","functions/activity/local/activityFunctions.js","pages/Detail.js","pages/CreateActivityPage.js","pages/EditActivityPage.js","RoutesWrapper.js","App.js","serviceWorker.js","index.js","assets/images/moon.svg","assets/images/sun.svg"],"names":["lightTheme","background","overlay","hasActivity","text","arrow","innerShadow","shadow","todayBg","darkTheme","GlobalStyles","createGlobalStyle","theme","UserReducer","state","action","type","authorizedUser","localStorage","setItem","UserContext","createContext","UserContextProvider","props","useReducer","localAuthorizedUser","getItem","JSON","parse","authorized_user","dispatchUser","Provider","value","children","ActivityReducer","data","id","activity_id","map","activity","filter","ActivityContext","ActivityContextProvider","local_data","cloud_data","length","localData","activities","dispatch","_addLocalActivityToCloud","current_activity","a","axios","post","then","res","catch","err","console","log","_addActivityToCloud","new_activity","response","_deleteActivityFromCloud","delete","headers","token","_editActivityFromCloud","put","_loadActivitiesFromCloud","email","get","Navbar","toggleTheme","useContext","useState","isLogin","setIsLogin","collapse","setCollapse","responseGoogle","googleUser","error","getToken","user","stringify","getBasicProfile","profile","name","getName","image","getImageUrl","getEmail","getId","index","date_arr","date_string","split","currentYear","currentMonth","currentDay","dateString","title","desc","time","loadProfile","useEffect","className","to","onClick","src","moon","sun","alt","clientId","process","buttonText","onSuccess","onFailure","isSignedIn","cookiePolicy","xmlns","viewBox","d","onLogoutSuccess","DayReducer","moment","format","join","DayContext","DayContextProvider","defaultState","date","Day","_onDayClicked","day","month","year","setIsLoading","activityClassName","setActivityClassName","todayClassName","setTodayClassName","currentDate","e","Main","history","daysInMonth","setDaysInMonth","mainCoverElement","el","document","querySelector","style","display","TimelineLite","opacity","_update","DaysWrapper","_displayDays","elements","i","push","key","ref","div","unselectable","width","height","fill","ActivityCard","_loadActivities","showDesc","setShowDesc","_onDelete","confirmAlert","customUI","onClose","prevVisitDate","activity_index","newState","data_index","_deleteActivityFromLocal","Detail","loadedActivities","setLoadedActivities","arr","_scrollToTop","window","setInterval","pos","pageYOffset","scrollTo","clearInterval","Modal","setAppElement","CreateActivityPage","modalIsOpen","setIsOpen","reminder","uuidv4","newActivity","setNewActivity","errMsg","setErrMsg","_onChange","persist","prevState","target","_onSubmit","preventDefault","reminder_date","NaN","parseInt","hour","slice","minute","subtract","toDate","hasFoundSameDate","_addActivityToLocal","setTimeout","goBack","isOpen","contentLabel","marginBottom","color","marginTop","onSubmit","method","autoComplete","margin","htmlFor","onChange","EditActivityPage","match","params","cloudData","item","_editActivityFromLocal","withRouter","mounted","setMounted","location","pathname","TransitionGroup","CSSTransition","appear","in","timeout","unmountOnExit","mountOnEnter","classNames","exact","path","component","App","setTheme","localTheme","Boolean","hostname","gsap","registerPlugin","CSSPlugin","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.0bd971cf.chunk.js","sourcesContent":["export const lightTheme = {\r\n    background: '#DCDDDF',\r\n    overlay: 'rgba(220, 221, 223, .85)',\r\n    hasActivity: '#cccfd5',\r\n    text: '#2C2645',    \r\n    arrow: '#62606c',\r\n    innerShadow: 'inset 4px 4px 10px #CACBCE, inset -4px -4px 10px #EFEFF0',\r\n    shadow: '4px 4px 10px #CACBCE, -4px -4px 10px #EFEFF0',\r\n    todayBg: '#4a5468',\r\n}\r\n\r\nexport const darkTheme = {\r\n    background: '#292A30',\r\n    overlay: 'rgba(41, 42, 48, .85)',\r\n    hasActivity: '#194f3e',\r\n    text: '#fff',\r\n    arrow: '#b0afaf',\r\n    innerShadow: 'inset 4px 4px 10px #1F1F24, inset -4px -4px 10px #31333A',\r\n    shadow: '4px 4px 10px #1F1F24, -4px -4px 10px #31333A',\r\n    todayBg: '#2699fd',\r\n}","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n    *,\r\n    *::after,\r\n    *::before {\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    :root {\r\n        --overlay: ${({theme}) => theme.overlay};\r\n        --primary-color : ${({ theme }) => theme.background};\r\n        --inner-shadow: ${({theme}) => theme.innerShadow};\r\n        --shadow: ${({theme}) => theme.shadow}\r\n    }\r\n\r\n    body, \r\n    .navbar {\r\n        background: ${({ theme }) => theme.background};\r\n        color: ${({ theme }) => theme.text};\r\n    }    \r\n\r\n    a { \r\n        color: ${({ theme }) => theme.text}; \r\n        text-decoration: none;\r\n    }\r\n\r\n    .soft-shadow {\r\n        box-shadow: ${({ theme }) => theme.shadow};\r\n    }\r\n\r\n    .inner-shadow {\r\n        box-shadow: ${({ theme }) => theme.innerShadow};\r\n    }    \r\n    \r\n    .google-button,.profile-container, .profile-collapse-item {\r\n        color: ${({ theme }) => theme.text} !important;\r\n        background-color: ${({ theme }) => theme.background} !important;\r\n        box-shadow: ${({ theme }) => theme.shadow} !important;\r\n    }\r\n\r\n    .google-button > div {\r\n        background-color: ${({ theme }) => theme.background} !important;\r\n    }\r\n\r\n    .google-button:hover, .google-button:hover > div, \r\n    .profile-collapse-item:hover {\r\n        box-shadow: ${({ theme }) => theme.innerShadow} !important;\r\n    }\r\n\r\n    .day {\r\n        color: ${({ theme }) => theme.text};\r\n        opacity: .5;\r\n    }\r\n\r\n    .today {\r\n        background-color: ${({ theme }) => theme.todayBg} !important;\r\n        opacity: 1 !important;        \r\n    }\r\n\r\n    .today .calendar-date {\r\n        color: #fff;\r\n    }\r\n\r\n    .arrow-svg {\r\n        fill: ${({ theme }) => theme.arrow};\r\n    }    \r\n\r\n    .add-svg {        \r\n        fill: ${({ theme }) => theme.text};\r\n    }\r\n\r\n    .calendar-date {\r\n        color: ${({ theme }) => theme.arrow};\r\n    }\r\n\r\n    .hasActivity {        \r\n        background: ${({theme}) => theme.hasActivity} !important;\r\n        opacity: 1;\r\n        animation: none !important;\r\n        box-shadow: none !important;        \r\n    }\r\n\r\n    .hasActivity .calendar-date {\r\n        color: inherit !important;\r\n    }\r\n    \r\n    input,     \r\n    .date,\r\n    form select,\r\n    textarea {\r\n        border: none;\r\n        -moz-box-shadow: ${({ theme }) => theme.innerShadow};\r\n        -webkit-box-shadow: ${({ theme }) => theme.innerShadow};\r\n        box-shadow: ${({ theme }) => theme.innerShadow};\r\n        background: ${({ theme }) => theme.background};\r\n    }\r\n\r\n    .round {\r\n        border-radius: 50px !important; \r\n    }\r\n\r\n    .neomorphism-logo { \r\n        border-radius: 5px;\r\n        cursor: pointer;\r\n        display:flex;\r\n        flex-flow:column;\r\n        align-items: center;\r\n        justify-content: center;               \r\n        box-shadow: ${({ theme }) => theme.shadow};                                   \r\n        width: 35px;\r\n        height: 35px;\r\n        padding: 10px;\r\n        background: ${({ theme }) => theme.background};\r\n    }     \r\n\r\n    .main-right__day:hover, \r\n    .neomorphism-logo:hover {        \r\n        animation: shadowOnHoverAnimation 100ms ease-out forwards;\r\n    }\r\n\r\n    .today:hover {\r\n        animation: unset;\r\n    }\r\n\r\n    @keyframes shadowOnHoverAnimation {\r\n        from {            \r\n            box-shadow: ${({ theme }) => theme.shadow};\r\n        }\r\n        to {            \r\n            opacity: 1;\r\n            box-shadow: ${({ theme }) => theme.innerShadow};\r\n        }\r\n    }\r\n\r\n    .day:hover {\r\n        animation: none !important;\r\n    }\r\n    \r\n    .main-right::-webkit-scrollbar-track {\r\n        background: ${({ theme }) => theme.arrow};\r\n    }\r\n    \r\n    .main-right::-webkit-scrollbar-thumb {\r\n        background: ${({ theme }) => theme.arrow};\r\n    }\r\n       \r\n`","export const UserReducer = (state, action) => {    \r\n\r\n    switch (action.type) {\r\n        case \"LOGIN\": {                                    \r\n            return action.authorizedUser;                    \r\n        }\r\n        case \"LOGOUT\":\r\n            localStorage.setItem('cloud_data', null);\r\n            localStorage.setItem('authorized_user', null);\r\n            break;\r\n\r\n        default:\r\n            break;\r\n    }\r\n}","import React, { createContext, useReducer } from \"react\";\r\nimport { UserReducer } from \"../reducers/UserReducer\";\r\n\r\nexport const UserContext = createContext();\r\n\r\nexport const UserContextProvider = props => {\r\n    \r\n    const [ authorized_user, dispatchUser ] = useReducer(UserReducer, null, () => {\r\n        \r\n        const localAuthorizedUser = localStorage.getItem('authorized_user');        \r\n        // if(localAuthorizedUser) {\r\n        //     dispatch({type: \"FETCH_FROM_CLOUD\"})\r\n        // }\r\n\r\n        return localAuthorizedUser ? JSON.parse(localAuthorizedUser) : null;\r\n    })\r\n\r\n    return (\r\n        <UserContext.Provider value={{authorized_user, dispatchUser}}>\r\n            {props.children}\r\n        </UserContext.Provider>\r\n    )\r\n}\r\n\r\nexport default UserContextProvider;","export const ActivityReducer = (state, action) => {       \r\n\r\n    switch (action.type) {\r\n        case \"ADD_ACTIVITY\": {       \r\n            return [...state, action.data]\r\n        }        \r\n        break;    \r\n\r\n        case \"FETCH_FROM_CLOUD\": {                        \r\n            // console.log(action.data)\r\n            return action.data;\r\n        }\r\n        break;\r\n\r\n        case \"EDIT_ACTIVITY\": {\r\n            const data = action.data;\r\n            const id = action.data.activity_id;   \r\n                        \r\n            return state.map(activity => activity.activity_id === id ? data : activity)\r\n        }\r\n        break;\r\n\r\n        case \"DELETE_ACTIVITY\": {            \r\n            return state.filter((activity) => activity.activity_id !== action.id)\r\n        }\r\n        break;\r\n\r\n\r\n\r\n        default:\r\n            break;\r\n    }\r\n}","import React, { createContext, useReducer } from \"react\";\r\nimport { ActivityReducer } from \"../reducers/ActivityReducer\";\r\n\r\nexport const ActivityContext = createContext();\r\n\r\nexport const ActivityContextProvider = props => {\r\n\r\n    const [ activities, dispatch ] = useReducer(ActivityReducer, [], () => {\r\n\r\n        const local_data = localStorage.getItem('user');        \r\n        const cloud_data = localStorage.getItem('cloud_data');            \r\n        \r\n        if(local_data && local_data.length > 0) {                \r\n            const localData = localStorage.getItem('user');\r\n            return localData ? JSON.parse(localData) : [];   \r\n        }     \r\n\r\n        else if(cloud_data && cloud_data.length > 0) {               \r\n            return cloud_data ? JSON.parse(cloud_data) : [];\r\n        }\r\n\r\n        else \r\n            return [];\r\n    })\r\n\r\n    return (\r\n        <ActivityContext.Provider value={{activities, dispatch}}>\r\n            {props.children}\r\n        </ActivityContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ActivityContextProvider;","import axios from 'axios'\r\n\r\n/*\r\n    [X] 1. Add\r\n    [X] 2. Edit\r\n    [X] 3. Delete\r\n    [X] 4. Get\r\n*/\r\n\r\nexport const _addLocalActivityToCloud = async (current_activity, dispatch) => {\r\n    axios.post('/activity/local_to_cloud', current_activity)\r\n        .then(res => {\r\n            const cloud_data = res.data\r\n            dispatch({ type: \"ADD_ACTIVITY\", cloud_data })\r\n        })\r\n        .then(() => {\r\n            // Clear localData so Google user can save on mongo directly\r\n            localStorage.setItem('user', null)\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\nexport const _addActivityToCloud = async (new_activity, dispatch) => {\r\n    const response = await axios.post('/activity/create', new_activity);\r\n    const data = response.data;\r\n\r\n    dispatch({ type: \"ADD_ACTIVITY\", data });\r\n}\r\n\r\nexport const _deleteActivityFromCloud = async (activity_id, authorized_user, dispatch) => {\r\n    const response = await axios.delete(`/activity/delete/${activity_id}`, { headers: { \"authorization\": authorized_user.token } })\r\n    const id = response.data;\r\n\r\n    // Delete on MongoDB\r\n    dispatch({ type: \"DELETE_ACTIVITY\", id })\r\n}\r\n\r\nexport const _editActivityFromCloud = async (new_activity, token, dispatch) => {\r\n    const response = await axios.put(`/activity/editActivity/${new_activity.activity_id}`, new_activity, { headers: { \"authorization\": token } })\r\n    const data = response.data;\r\n\r\n    dispatch({ type: \"EDIT_ACTIVITY\", data })\r\n}\r\n\r\nexport const _loadActivitiesFromCloud = async (email, token, dispatch) => {\r\n    const response = await axios.get(`/activity/displayAll/${email}`, { headers: { \"authorization\": token } })\r\n    const data = response.data\r\n\r\n    dispatch({ type: \"FETCH_FROM_CLOUD\", data })\r\n}  ","import '../styles/navbar.css'\r\nimport moon from '../assets/images/moon.svg';\r\nimport sun from '../assets/images/sun.svg';\r\nimport { NavLink } from 'react-router-dom';\r\nimport GoogleLogin, {GoogleLogout} from 'react-google-login';\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport { UserContext } from '../contexts/UserContext';\r\nimport { ActivityContext } from '../contexts/ActivityContext';\r\nimport axios from 'axios'\r\nimport { _loadActivitiesFromCloud, _addLocalActivityToCloud } from '../functions/activity/cloud/activityFunctions';\r\n\r\nconst Navbar = ({ theme, toggleTheme }) => {    \r\n\r\n    const { dispatch } = useContext(ActivityContext)\r\n    const { authorized_user, dispatchUser } = useContext(UserContext);    \r\n\r\n    // Check if user is already login\r\n    const [isLogin, setIsLogin] = useState(false)   \r\n    const [collapse, setCollapse] = useState(true)        \r\n\r\n    const responseGoogle = (googleUser) => {\r\n        \r\n        if(googleUser.error)\r\n            return console.log(googleUser.error)\r\n        \r\n        async function loadProfile() {\r\n            const profile = await googleUser.getBasicProfile();\r\n\r\n            if(!profile)\r\n                return setIsLogin(false);                                         \r\n            \r\n            const user = {\r\n                name: profile.getName(),\r\n                image: profile.getImageUrl(),\r\n                email: profile.getEmail(),\r\n                id: profile.getId()\r\n            }\r\n\r\n            const localData = JSON.parse(localStorage.getItem('user'));\r\n\r\n            // If user has create activities before\r\n            if(localData) {\r\n                localData.activities.map((activity, index) => {                    \r\n                    \r\n                    activity.data.map((data) => {\r\n\r\n                        const date_arr = activity.date_string.split('-')            \r\n                        const currentYear = date_arr[0],\r\n                              currentMonth = date_arr[1],\r\n                              currentDay = date_arr[2]\r\n\r\n                        const current_activity = {\r\n                            email: user.email,\r\n                            dateString: activity.date_string,\r\n                            title: data.title,\r\n                            desc: data.desc,\r\n                            time: data.time,\r\n                            activity_id: data.activity_id,\r\n                            currentYear,\r\n                            currentMonth,\r\n                            currentDay\r\n                        }\r\n\r\n                        _addLocalActivityToCloud(current_activity, dispatch);\r\n                            \r\n                        return data;\r\n                    })\r\n                    return activity\r\n                })                \r\n                \r\n            }\r\n\r\n            async function getToken() {\r\n                // Calling api                \r\n                const response = await axios.post('/user/login', user)\r\n                const data = response.data;                  \r\n                \r\n                const authorizedUser = {\r\n                    ...data.user,\r\n                    token: data.token\r\n                }                \r\n    \r\n                // // Store user that logged in by Google in localStorage\r\n                localStorage.setItem('authorized_user', JSON.stringify(authorizedUser));\r\n                \r\n                dispatchUser({type:\"LOGIN\", authorizedUser})  \r\n                setIsLogin(true); \r\n            }                     \r\n\r\n            getToken();                                  \r\n\r\n        }\r\n\r\n        loadProfile();        \r\n        \r\n        // console.log('ID: ' + profile.getId()); // Do not send to your backend! Use an ID token instead.\r\n        // console.log('Name: ' + profile.getName());\r\n        // console.log('Image URL: ' + profile.getImageUrl());\r\n        // console.log('Email: ' + profile.getEmail()); // This is null if the 'email' scope is not present.\r\n    }    \r\n\r\n    useEffect(() => {\r\n        \r\n        if(authorized_user) {            \r\n            \r\n            const email = authorized_user.email; \r\n            const token = authorized_user.token; \r\n            \r\n            _loadActivitiesFromCloud(email, token, dispatch);                                    \r\n        }\r\n        \r\n    }, [authorized_user])\r\n    \r\n    const onLogout = () => {\r\n        setIsLogin(false)\r\n        dispatchUser({type:\"LOGOUT\"})        \r\n    }\r\n\r\n\r\n    return (\r\n        <nav className=\"navbar\">\r\n            <div className=\"container\">\r\n            <strong className=\"big-font\"><NavLink to=\"/\">Weekly.</NavLink></strong>                \r\n                {isLogin === false ? (\r\n                    <div className=\"unauthorized-navbar\">\r\n                        <img onClick={() => toggleTheme()} className=\"logo\" src={theme === 'light' ? moon : sun} alt=\"mode\"/>                                                                          \r\n                        <GoogleLogin \r\n                            className=\"google-button\"\r\n                            clientId={process.env.REACT_APP_GOOGLE_SIGNIN_CLIENT}\r\n                            buttonText=\"Sign In\"\r\n                            onSuccess={responseGoogle}\r\n                            onFailure={responseGoogle}\r\n                            isSignedIn={true}\r\n                            cookiePolicy={'single_host_origin'}\r\n                        />                        \r\n                    </div>\r\n                ) : (\r\n                    <div className=\"profile-container\">\r\n                        <div className=\"profile-header\">\r\n                            <img className=\"profile-avatar\" src={authorized_user.image} alt={authorized_user.name}/>                            \r\n                            <p className=\"profile-name\">{authorized_user.name}</p> \r\n                            <svg onClick={() => setCollapse(!collapse)} className=\"neomorphism-logo\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path className=\"add-svg\" d=\"M12,15a1,1,0,0,1-.71-.29l-4-4A1,1,0,0,1,8.71,9.29L12,12.59l3.29-3.29a1,1,0,0,1,1.41,1.41l-4,4A1,1,0,0,1,12,15Z\"/></svg>\r\n                        </div>                                                \r\n                        <div className={`profile-collapse-content ${collapse ? \"collapse\" : \"show-collapse\"}`}>                            \r\n                            <p className=\"profile-name profile-collapse-item\">{authorized_user.name}</p>                                                      \r\n                            <div className=\"profile-collapse-item\" onClick={() => toggleTheme()}>\r\n                                <img className=\"logo\" src={theme === 'light' ? moon : sun} alt=\"mode\"/>                                                                          \r\n                                <span className=\"profile-collapse-item-text\">Mode</span>\r\n                            </div> \r\n\r\n                            <GoogleLogout \r\n                                className=\"profile-collapse-item google-logout-button\" \r\n                                onLogoutSuccess={onLogout}\r\n                                buttonText=\"Sign out\"\r\n                                clientId={process.env.REACT_APP_GOOGLE_SIGNIN_CLIENT}\r\n                            />\r\n                        </div>                                                \r\n                    </div>                    \r\n                )}                \r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import moment from \"moment\"\r\n\r\nexport const DayReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"CHANGE_YEAR\":\r\n            return {\r\n                ...state,\r\n                currentYear: action.currentYear,                \r\n                dateString: moment(`${action.currentYear}/${state.currentMonth}/${state.currentDay}`).format('YYYY MM DD').split(\" \").join(\"-\")                \r\n            }                    \r\n    \r\n        case \"CHANGE_MONTH\":\r\n            return {\r\n                ...state,\r\n                currentMonth: action.currentMonth,\r\n                dateString: moment(`${state.currentYear}/${action.currentMonth}/${state.currentDay}`).format('YYYY MM DD').split(\" \").join(\"-\")\r\n            }        \r\n\r\n        case \"CHANGE_DAY\":\r\n            return {\r\n                ...state,                 \r\n                currentDay: action.currentDay,\r\n                dateString: moment(`${state.currentYear}/${state.currentMonth}/${action.currentDay}`).format('YYYY MM DD').split(\" \").join(\"-\")\r\n            }        \r\n\r\n        default:\r\n            break;\r\n    }\r\n}","import React, { createContext, useReducer } from \"react\";\r\nimport { DayReducer } from \"../reducers/DayReducer\";\r\nimport moment from 'moment'\r\nimport { useEffect } from \"react\";\r\n\r\nexport const DayContext = createContext();\r\n\r\nexport const DayContextProvider = props => {    \r\n\r\n    let defaultState = {\r\n        currentYear: moment().get('year'), \r\n        currentMonth: moment().get('month') + 1,\r\n        currentDay: 1\r\n    }\r\n\r\n    const [ date, dispatch ] = useReducer(DayReducer, defaultState, () => {        \r\n        const localData = localStorage.getItem('current_dateInformation')\r\n        return localData ? JSON.parse(localData) : defaultState ;\r\n    })\r\n\r\n    useEffect(() => {                        \r\n        localStorage.setItem('current_dateInformation', JSON.stringify(date))\r\n\r\n        return () => console.log('unmount day context.')\r\n    }, [date])\r\n\r\n    return (\r\n        <DayContext.Provider value={{date, dispatch}}>\r\n            {props.children}\r\n        </DayContext.Provider>\r\n    )\r\n}\r\n\r\nexport default DayContextProvider;","import React, { useContext, useEffect, useState } from 'react'\r\nimport moment from 'moment';\r\nimport {ActivityContext} from '../contexts/ActivityContext'\r\nimport { UserContext } from '../contexts/UserContext';\r\n\r\nconst Day = ({ _onDayClicked, day, month, year }) => {\r\n\r\n    const { activities } = useContext(ActivityContext);\r\n    const { authorized_user } = useContext(UserContext);       \r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [activityClassName, setActivityClassName] = useState(\"\");\r\n    const [todayClassName, setTodayClassName] = useState(\"\")\r\n\r\n    useEffect(() => {                       \r\n\r\n        // Current dateString        \r\n        const dateString = moment(`${year}/${month}/${day}`).format('YYYY MM DD').split(\" \").join(\"-\");\r\n\r\n        // Today date\r\n        const currentDate = moment().format('YYYY-MM-DD').split(\" \").join(\"-\");\r\n\r\n        if(dateString === currentDate)\r\n            setTodayClassName(\"today\");\r\n\r\n        // Compare dateString with every data in localStorage\r\n        if (JSON.parse(localStorage.getItem('user')) !== null) {\r\n\r\n            // Parse data to JSON\r\n            const localData = JSON.parse(localStorage.getItem('user'));\r\n\r\n            // If has at least 1 activity is stored,\r\n            // then check if current day has any activity.\r\n            if (localData && localData.activities.length > 0) {\r\n\r\n                // Compare every date_string in the activities array\r\n                // If is matched, set hasActivity to `true`\r\n                localData.activities.map((activity) => {                    \r\n                    \r\n                    if(activity.date_string === dateString) {                        \r\n                        setActivityClassName(\"hasActivity\") \r\n                    }                       \r\n                    \r\n                    return activity\r\n                        \r\n                })\r\n\r\n            }\r\n\r\n        }\r\n\r\n        else if(authorized_user) {\r\n            // If has at least 1 activity is stored,\r\n            // then check if current day has any activity.\r\n            if (activities && activities.length > 0) {                                \r\n\r\n                // Compare every date_string in the activities array\r\n                // If is matched, set hasActivity to `true`\r\n                activities.map((activity) => {                                      \r\n                    \r\n                    if(activity.dateString === dateString) {                        \r\n                        setActivityClassName(\"hasActivity\")\r\n                        return \r\n                    }                                                                \r\n                        \r\n                })\r\n\r\n            }\r\n        }        \r\n\r\n        setIsLoading(false)\r\n\r\n    }, [month, year])    \r\n\r\n    return (\r\n        <>\r\n            <div onClick={(e) => day && _onDayClicked(e, day)} className={`soft-shadow main-right__day ${todayClassName} ${activityClassName}`}>\r\n                    <h1 className=\"bold-font font--big calendar-date\">{day}</h1>            \r\n                </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Day\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport '../styles/main.css'\r\nimport moment from 'moment'\r\nimport { DayContext } from '../contexts/DayContext'\r\nimport Day from '../components/Day'\r\nimport { ActivityContext } from '../contexts/ActivityContext'\r\nimport {} from 'gsap'\r\nimport { TweenLite } from 'gsap/gsap-core'\r\nimport { TimelineLite } from 'gsap/gsap-core'\r\n\r\nconst Main = ({ history }, props) => {    \r\n\r\n    const { date: {currentMonth, currentYear}, dispatch } = useContext(DayContext);    \r\n    const [daysInMonth, setDaysInMonth] = useState(0)    \r\n    const { activities } = useContext(ActivityContext)\r\n    \r\n    let mainCoverElement = null,\r\n        mainCoverTween = null;    \r\n\r\n    useEffect(() => {                                             \r\n        setDaysInMonth(moment(`${currentYear}-${currentMonth}`, \"YYYY-MM\").daysInMonth());                        \r\n    }, [currentMonth, currentYear, activities])        \r\n    \r\n    useEffect(() => {                                \r\n\r\n        const el = document.querySelector('.profile-container');\r\n\r\n        if(el)\r\n            el.style.display = 'none'\r\n\r\n        mainCoverTween = new TimelineLite()\r\n                            .to(mainCoverElement, .75, {opacity: 1})\r\n                            .to(mainCoverElement, .25, {opacity: 0, display: \"none\"})  \r\n                            .then(() => el ? el.style.display = \"flex\" : null)\r\n                            // .to(mainCoverElement, 5, { backgroundColor: \"none\", translateX: -5000})\r\n    }, [])\r\n\r\n    const _update = (type, action) => {\r\n        if (type === 'year') {\r\n            switch (action) {\r\n                case 'INCREMENT':\r\n                    dispatch({type: \"CHANGE_YEAR\", currentYear: currentYear + 1})                    \r\n                    break;\r\n                case 'DECREMENT':\r\n                    dispatch({type: \"CHANGE_YEAR\", currentYear: currentYear - 1})                    \r\n                    break;\r\n            }\r\n        }\r\n\r\n        else if (type === 'month') {\r\n\r\n            switch (action) {\r\n                case 'INCREMENT':\r\n                    if (currentMonth === 12) {\r\n                        dispatch({type: \"CHANGE_YEAR\", currentYear: currentYear + 1})                    \r\n                        dispatch({type: \"CHANGE_MONTH\", currentMonth: 1})                                            \r\n                    }\r\n                    else                        \r\n                        dispatch({type: \"CHANGE_MONTH\", currentMonth: currentMonth + 1})                    \r\n                    break;\r\n                case 'DECREMENT':\r\n                    if (currentMonth === 1) {\r\n                        dispatch({type: \"CHANGE_YEAR\", currentYear: currentYear - 1})                    \r\n                        dispatch({type: \"CHANGE_MONTH\", currentMonth: 12})                                            \r\n                    }\r\n                    else\r\n                        dispatch({type: \"CHANGE_MONTH\", currentMonth: currentMonth - 1})                    \r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }        \r\n    }\r\n\r\n    const DaysWrapper = () => {\r\n        return (_displayDays())\r\n    }\r\n\r\n    const _displayDays = () => {\r\n        let elements = []\r\n\r\n        // Get first day of the month\r\n        let firstDay = moment(`${currentYear}-${currentMonth}`, \"YYYY-MM\").day(),\r\n            startAt = 1 - firstDay;            \r\n\r\n        for (var i = startAt; i <= daysInMonth; i++) {                        \r\n\r\n            if (i >= 1) {                                                                 \r\n                elements.push(<Day key={i} _onDayClicked={_onDayClicked} day={i} month={currentMonth} year={currentYear} />)\r\n            }\r\n            else {\r\n                elements.push(<Day key={i} day={\"\"} />)\r\n            }\r\n        }\r\n\r\n        return elements\r\n    }\r\n\r\n    const _onDayClicked = (e, currentDay) => {                        \r\n        \r\n        dispatch({type: \"CHANGE_DAY\", currentDay})\r\n                    \r\n        localStorage.setItem('current_dateInformation', JSON.stringify({            \r\n            currentDay,\r\n            currentMonth,\r\n            currentYear\r\n        }));\r\n\r\n        history.push('/detail'); \r\n    }\r\n\r\n    return (\r\n        <section className=\"main-section\">\r\n            <div ref={div => mainCoverElement = div} id=\"main-cover\">\r\n                <h1 className=\"main-cover-title\">Weekly.</h1>\r\n            </div>\r\n            <div className=\"container main-container\">\r\n\r\n                <div className=\"main-left\" unselectable=\"on\">\r\n\r\n                    <div className=\"main-left-item\">\r\n                        <div className=\"neomorphism-logo\" onClick={() => _update('year', 'DECREMENT')}>\r\n                            <svg className=\"logo\" width=\"36\" height=\"30\" viewBox=\"0 0 36 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path className=\"arrow-svg\" d=\"M18 0L35.3205 30H0.679491L18 0Z\" />\r\n                            </svg>\r\n                        </div>\r\n                        <div className=\"main-left__itemContent\">\r\n                            {/* <p>Year</p> */}\r\n                            <strong className=\"big-font\">{currentYear}</strong>\r\n                        </div>\r\n                        <div className=\"neomorphism-logo\" onClick={() => _update('year', 'INCREMENT')} >\r\n                            <svg className=\"logo\" width=\"36\" height=\"30\" viewBox=\"0 0 36 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path className=\"arrow-svg\" d=\"M18 30L35.3205 0H0.679491L18 30Z\" fill=\"#C3C5C8\" />\r\n                            </svg>\r\n                        </div>                        \r\n                    </div>\r\n\r\n                    <div className=\"main-left-item\">\r\n                        <div className=\"neomorphism-logo\" onClick={() => _update('month', 'DECREMENT')} >\r\n                            <svg className=\"logo\" width=\"36\" height=\"30\" viewBox=\"0 0 36 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path className=\"arrow-svg\" d=\"M18 0L35.3205 30H0.679491L18 0Z\" />\r\n                            </svg>\r\n                        </div>\r\n                        <div className=\"main-left__itemContent\">\r\n                            {/* <p>Month</p> */}\r\n                            <strong className=\"big-font\">{currentMonth}</strong>\r\n                        </div>\r\n                        <div className=\"neomorphism-logo\"  onClick={() => _update('month', 'INCREMENT')}>\r\n                            <svg className=\"logo\" width=\"36\" height=\"30\" viewBox=\"0 0 36 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path className=\"arrow-svg\" d=\"M18 30L35.3205 0H0.679491L18 30Z\" fill=\"#C3C5C8\" />\r\n                            </svg>\r\n                        </div>                                                \r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"main-right\">\r\n                    <p className=\"day main-right__day\">SUN</p>\r\n                    <p className=\"day main-right__day\">MON</p>\r\n                    <p className=\"day main-right__day\">TUE</p>\r\n                    <p className=\"day main-right__day\">WED</p>\r\n                    <p className=\"day main-right__day\">THU</p>\r\n                    <p className=\"day main-right__day\">FRI</p>\r\n                    <p className=\"day main-right__day\">SAT</p>                    \r\n                    {daysInMonth > 0 && <DaysWrapper />}\r\n                </div>\r\n\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import React, { useContext, useState } from 'react'\r\nimport { ActivityContext } from '../contexts/ActivityContext'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport axios from 'axios';\r\nimport { _deleteActivityFromLocal } from '../functions/activity/local/activityFunctions';\r\nimport { _deleteActivityFromCloud, _loadActivitiesFromCloud } from '../functions/activity/cloud/activityFunctions';\r\n\r\nconst ActivityCard = ({ history, index, activity: { title, desc, time, activity_id }, _loadActivities }) => {\r\n\r\n  const [showDesc, setShowDesc] = useState(false);\r\n  const { dispatch } = useContext(ActivityContext)\r\n\r\n  const _onShowDesc = () => {\r\n    setShowDesc(!showDesc);\r\n  }\r\n\r\n  const _onEdit = (e) => {\r\n    history.push(`/edit/${activity_id}`);\r\n  }\r\n\r\n  const _onDelete = e => {\r\n    confirmAlert({\r\n      customUI: ({ onClose }) => {\r\n        return (\r\n          <div className='custom-ui soft-shadow'>\r\n            <h1 className=\"custom-ui__title\">Delete this item?</h1>\r\n            <p className=\"custom-ui__desc\">\"{title}\"</p>\r\n            <button\r\n              className=\"soft-shadow\"\r\n              onClick={() => {\r\n\r\n                const localData = JSON.parse(localStorage.getItem('user'));\r\n                const prevVisitDate = JSON.parse(localStorage.getItem('current_dateInformation'))\r\n                const authorized_user = JSON.parse(localStorage.getItem('authorized_user'))\r\n\r\n                if(authorized_user) {                                           \r\n                  _deleteActivityFromCloud(activity_id, authorized_user, dispatch)\r\n                    .then(() => _loadActivitiesFromCloud(authorized_user.email, authorized_user.token, dispatch));\r\n                }\r\n\r\n                else {                     \r\n                \r\n                  _deleteActivityFromLocal(localData, prevVisitDate, activity_id)\r\n                  _loadActivities();                  \r\n                }\r\n                \r\n                onClose();\r\n              }}\r\n            >\r\n              Yes, Delete it!\r\n                  </button>\r\n            <button className=\"soft-shadow\" onClick={onClose}>Cancel</button>\r\n          </div>\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"activity-card soft-shadow\">\r\n      <div className=\"activity-card__header\">\r\n        {/* More SVG */}\r\n        <div className=\"neomorphism-logo\" onClick={e => _onShowDesc()}>\r\n          <svg className=\"logo arrow-svg\" viewBox=\"0 0 25 15\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M11.6486 7.61379C11.9274 7.78879 12.2386 7.90754 12.5636 7.96129C12.8799 7.95629 13.1836 7.83254 13.4124 7.61379L20.5774 0.717542C21.0655 0.258923 21.7095 0.00258005 22.3793 0.000260026C23.0491 -0.00206 23.6948 0.249815 24.1861 0.705042L24.2236 0.740042C24.4677 0.968327 24.6625 1.24416 24.7959 1.55056C24.9294 1.85695 24.9987 2.18743 24.9997 2.52163C25.0006 2.85583 24.9331 3.18669 24.8014 3.49383C24.6696 3.80097 24.4764 4.07789 24.2336 4.30754L13.4674 14.6413C13.2211 14.869 12.899 14.9969 12.5636 15C12.2203 14.945 11.8912 14.8232 11.5949 14.6413L0.763601 4.30754C0.521117 4.07755 0.328277 3.80036 0.196957 3.49303C0.0656373 3.18571 -0.00138355 2.85475 2.16475e-05 2.52055C0.00142685 2.18635 0.0712283 1.85597 0.205128 1.54976C0.339028 1.24355 0.534191 0.967985 0.778601 0.740042L0.823601 0.705042C1.31814 0.249804 1.96639 -0.0018451 2.63855 0.00047272C3.31072 0.00279054 3.95721 0.258904 4.4486 0.717542L11.6486 7.61379Z\" fill=\"inherit\" />\r\n          </svg>\r\n\r\n        </div>\r\n        {/* Edit SVG */}\r\n        <div className=\"neomorphism-logo\" onClick={e => _onEdit()}>\r\n          <svg className=\"logo arrow-svg\" viewBox=\"0 0 25 25\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M0 19.7909V25H5.20906L20.5792 9.62981L15.3702 4.42075L0 19.7909ZM24.5937 5.61536C25.1354 5.07362 25.1354 4.19155 24.5937 3.64981L21.3502 0.406306C20.8084 -0.135435 19.9264 -0.135435 19.3846 0.406306L16.8426 2.94833L22.0517 8.15738L24.5937 5.61536Z\" fill=\"inherit\" />\r\n          </svg>\r\n\r\n        </div>\r\n\r\n        {/* Delete SVG */}\r\n        <div className=\"neomorphism-logo\" onClick={e => _onDelete(e)}>\r\n          <svg className=\"logo arrow-svg\" viewBox=\"0 0 25 7\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <rect width=\"25\" height=\"6.57895\" fill=\"inherit\" />\r\n          </svg>\r\n\r\n        </div>\r\n      </div>\r\n      <h1 className=\"activity-card__title\">{title}</h1>\r\n      <div className={`activity-card__desc_wrapper ${showDesc ? \"showDescClass\" : \"hideDescClass\"}`}>\r\n        <small className=\"activity-card__time\">{time}</small>\r\n        <p className=\"activity-card__desc\">{desc}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ActivityCard\r\n","/*\r\n    [X] 1. Add\r\n    [X] 2. Edit\r\n    [X] 3. Delete\r\n    [ ] 4. Get\r\n*/\r\n\r\nexport const _addActivityToLocal = (newActivity, dateString) => {\r\n\r\n    // New user\r\n    if (JSON.parse(localStorage.getItem('user')) === null) {\r\n\r\n        const user = {\r\n            activities: [\r\n                {\r\n                    date_string: dateString,\r\n                    data: [newActivity]\r\n                }\r\n            ]\r\n        }\r\n\r\n        // Store into localStorage\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n    }\r\n\r\n    // Existing User\r\n    else {\r\n\r\n        const user = JSON.parse(localStorage.getItem('user'));\r\n        let hasFoundSameDate = false;\r\n\r\n        user.activities.map((activity, index) => {\r\n            if (activity.date_string === dateString) {\r\n                activity.data.push(newActivity);\r\n                hasFoundSameDate = true\r\n            }\r\n            return activity;\r\n        })\r\n\r\n        if (!hasFoundSameDate) {\r\n            user.activities.push({\r\n                date_string: dateString,\r\n                data: [newActivity]\r\n            })\r\n        }\r\n\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n    }\r\n\r\n}\r\n\r\nexport const _editActivityFromLocal = (localData, prevVisitDate, newActivity) => {\r\n\r\n    // Edit activity, cost n^2\r\n    localData.activities.map((activity, index) => {\r\n\r\n        if (activity.date_string === prevVisitDate.dateString) {\r\n            \r\n            const newState = localData;\r\n            const { title, desc, time, activity_id } = newActivity\r\n            newState.activities[index].data = newState.activities[index].data.map((data, data_index) => data.activity_id === activity_id ? { ...data, title, desc, time, activity_id } : data)\r\n\r\n            localStorage.setItem('user', JSON.stringify(newState));\r\n        }\r\n\r\n        return activity\r\n        \r\n    })\r\n\r\n}\r\n\r\nexport const _deleteActivityFromLocal = (localData, prevVisitDate, activity_id) => {\r\n    // Delete on local data\r\n    localData.activities.map((activity, activity_index) => {\r\n        if (activity.date_string === prevVisitDate.dateString) {\r\n            const newState = localData;\r\n            newState.activities[activity_index].data = newState.activities[activity_index].data.filter((data, data_index) => data.activity_id !== activity_id)\r\n            newState.activities = newState.activities.filter((activity) => activity.data.length > 0)\r\n            localStorage.setItem('user', JSON.stringify(newState));\r\n        }\r\n\r\n        return activity;\r\n    })\r\n}             \r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport '../styles/detail.css'\r\nimport { DayContext } from '../contexts/DayContext'\r\nimport moment from 'moment'\r\nimport ActivityCard from '../components/ActivityCard'\r\nimport { _scrollToTop } from '../functions/ScrollToTop'\r\nimport { ActivityContext } from '../contexts/ActivityContext'\r\n\r\nconst Detail = ({ history }) => {\r\n\r\n    const { date: { currentYear, currentMonth, currentDay, dateString }, dispatch } = useContext(DayContext)\r\n    const [daysInMonth, setDaysInMonth] = useState(0)\r\n    const { activities } = useContext(ActivityContext)\r\n    const [loadedActivities, setLoadedActivities] = useState([])    \r\n\r\n    useEffect(() => {                            \r\n\r\n        setDaysInMonth(moment(`${currentYear}-${currentMonth}`, \"YYYY-MM\").daysInMonth());        \r\n\r\n    }, [currentMonth, currentYear]) \r\n    \r\n    useEffect(() => {  \r\n        \r\n        // const loadCloudData = async() => {                                \r\n        //     const response = await axios.get(`/activity/displayAll/${email}`, {headers: {\"authorization\": token}})\r\n        //     const data = response.data\r\n            \r\n        //     dispatch({type: \"FETCH_FROM_CLOUD\", data})\r\n        // }          \r\n        \r\n        // loadCloudData()          \r\n\r\n        if(JSON.parse(localStorage.getItem('authorized_user'))) {\r\n\r\n            setLoadedActivities([])                                                   \r\n            \r\n            localStorage.setItem('cloud_data', JSON.stringify(activities))                                                                       \r\n            _loadActivities();\r\n        }           \r\n\r\n    }, [activities])\r\n\r\n    useEffect(() => {        \r\n        _loadActivities();                  \r\n    }, [currentDay])    \r\n    \r\n    const _loadActivities = () => {                \r\n        \r\n        const user = JSON.parse(localStorage.getItem('user'));        \r\n        const authorized_user = JSON.parse(localStorage.getItem('authorized_user'))\r\n        \r\n        setLoadedActivities([])                  \r\n\r\n        if(user === null && authorized_user === null)\r\n            return;                \r\n\r\n        if(user) {            \r\n            user.activities.map((activity, index) => {                    \r\n                if(activity.date_string === dateString) {   \r\n                    console.log(activity)               \r\n                    setLoadedActivities(activity.data);\r\n                }                                                            \r\n            })\r\n        }        \r\n\r\n        else if(authorized_user) {            \r\n            if(JSON.parse(localStorage.getItem('cloud_data'))) {\r\n                \r\n                let arr = [];\r\n                const activities = JSON.parse(localStorage.getItem('cloud_data'))\r\n                \r\n                if(activities && activities.length > 0) {\r\n                    activities.map((activity, index) => {                    \r\n                        if(activity.dateString === dateString) {                                              \r\n                            arr.push(activity)                            \r\n                        }                                                            \r\n                    })\r\n\r\n                    setLoadedActivities(arr);\r\n                }                \r\n            }                        \r\n        }\r\n\r\n    }\r\n\r\n    const _update = (type, action) => {\r\n\r\n        const _scrollToTop = window.setInterval(() => {            \r\n            var pos = window.pageYOffset;\r\n            if( pos > 0 ) {\r\n                window.scrollTo(0, pos - 20);\r\n            }\r\n            else\r\n                window.clearInterval(_scrollToTop);\r\n        }, 16);\r\n\r\n        switch (action) {\r\n            case 'INCREMENT':\r\n\r\n                // If currentMonth is equal to 12, go to next year\r\n                if (currentMonth === 12) {\r\n                    dispatch({ type: \"CHANGE_YEAR\", currentYear: currentYear + 1 })\r\n                    dispatch({ type: \"CHANGE_MONTH\", currentMonth: 1 })\r\n                    dispatch({ type: \"CHANGE_DAY\", currentDay: 1 })\r\n                }\r\n\r\n                // If currentDay is equal to 30/31, then go to next month\r\n                else if (currentDay === daysInMonth) {\r\n                    dispatch({ type: \"CHANGE_MONTH\", currentMonth: currentMonth + 1 })\r\n                    dispatch({ type: \"CHANGE_DAY\", currentDay: 1 })\r\n                }\r\n\r\n                else\r\n                    dispatch({ type: \"CHANGE_DAY\", currentDay: currentDay + 1 })\r\n            break;\r\n\r\n            case 'DECREMENT':                \r\n\r\n                // If currentMonth is equal to 1, go to last year\r\n                if (currentMonth === 1) {\r\n                    console.log('true')\r\n                    dispatch({ type: \"CHANGE_YEAR\", currentYear: currentYear - 1 })\r\n                    dispatch({ type: \"CHANGE_MONTH\", currentMonth: 12 })\r\n                    dispatch({ type: \"CHANGE_DAY\", currentDay: 31 })\r\n                }\r\n\r\n\r\n                // If currentDay is equal to 1, then go to prev month\r\n                else if (currentDay === 1) {\r\n                    dispatch({ type: \"CHANGE_MONTH\", currentMonth: currentMonth - 1 })\r\n                    dispatch({ type: \"CHANGE_DAY\", currentDay: moment(`${currentYear}-${currentMonth - 1}`, \"YYYY-MM\").daysInMonth() })\r\n                }\r\n            \r\n                else\r\n                    dispatch({ type: \"CHANGE_DAY\", currentDay: currentDay - 1 })\r\n\r\n            break;\r\n        }\r\n        \r\n    }\r\n\r\n    /*\r\n        ========================\r\n        Activity obj structure\r\n        ========================\r\n\r\n        activities: [\r\n            {\r\n                date: '9-3-2020',\r\n                data: [\r\n                    {\r\n                        name: 'activty1'\r\n                    },\r\n                    {\r\n                        name: 'activty2'\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                date: '10-3-2020',\r\n                data: [\r\n                    {\r\n                        name: 'activty3'\r\n                    },\r\n                    {\r\n                        name: 'activty4'\r\n                    },\r\n                ]\r\n            }\r\n        ]\r\n\r\n        Q: How to add activity ?\r\n        A: Create an user object (if not existed), \r\n           and then user object contains an activities array,\r\n           and activity obj will be stored in the array\r\n\r\n        Q: What if the day has at least 1 activity?\r\n        A: Before adding a new activity, loops through the array and check with date\r\n           If date is same, push in the array of activity obj        \r\n        \r\n        \r\n        ========================\r\n        Found issues/bugs (👌 = solved)\r\n        ========================\r\n        [👌] 1. Incorrect date when switch to next year.\r\n        [👌] 2. Incorrect date when switch to previous year.\r\n    */\r\n\r\n    \r\n\r\n    return (\r\n        <section className=\"detail-section\">\r\n            <div className=\"detail-container container\">\r\n                <div className=\"detail-header\">\r\n                    <div className=\"detail-header-date date\">\r\n                        <h1>{`${currentDay}/${currentMonth}/${currentYear}`}</h1>\r\n                        <span className=\"detail-header__arrow-container\">\r\n                            <div className=\"neomorphism-logo\" onClick={e => _update(\"CHANGE_DAY\", \"DECREMENT\")} >\r\n                                <svg className=\"logo\" viewBox=\"0 0 36 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path className=\"arrow-svg\" d=\"M18 0L35.3205 30H0.679491L18 0Z\" />\r\n                                </svg>\r\n                            </div>\r\n                            <div className=\"neomorphism-logo\" onClick={e => _update(\"CHANGE_DAY\", \"INCREMENT\")} >\r\n                                <svg className=\"logo\" viewBox=\"0 0 36 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path className=\"arrow-svg\" d=\"M18 30L35.3205 0H0.679491L18 30Z\" fill=\"#C3C5C8\" />\r\n                                </svg>\r\n                            </div>\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"neomorphism-logo round\" onClick={e => history.push('/create')}>\r\n                        <svg className=\"logo\" viewBox=\"0 0 50 50\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path className=\"add-svg\" d=\"M25.05 0H24.95C22.2162 0 20 2.21619 20 4.95V45.05C20 47.7838 22.2162 50 24.95 50H25.05C27.7838 50 30 47.7838 30 45.05V4.95C30 2.21619 27.7838 0 25.05 0Z\" />\r\n                            <path className=\"add-svg\" d=\"M45.05 20H4.95C2.21619 20 0 22.2162 0 24.95V25.05C0 27.7838 2.21619 30 4.95 30H45.05C47.7838 30 50 27.7838 50 25.05V24.95C50 22.2162 47.7838 20 45.05 20Z\" />\r\n                        </svg>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"detail-activities\">\r\n                    <p className=\"opacity-50\">Activities</p>\r\n                    {loadedActivities.length > 0 && loadedActivities.map((activity, index) => <ActivityCard history={history} key={index} index={index} activity={activity} _loadActivities={_loadActivities} />)}\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Detail\r\n","import React, { useState, useContext } from 'react'\r\nimport '../styles/form.css'\r\nimport moment from 'moment'\r\nimport Modal from 'react-modal';\r\nimport HashLoader from 'react-spinners/HashLoader'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport axios from 'axios'\r\n\r\n// Import Context\r\nimport { DayContext } from '../contexts/DayContext'\r\nimport { ActivityContext } from '../contexts/ActivityContext'\r\nimport { _addActivityToLocal } from '../functions/activity/local/activityFunctions';\r\nimport { _addActivityToCloud } from '../functions/activity/cloud/activityFunctions';\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst CreateActivityPage = ({ history }) => {\r\n\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n\r\n    // Context\r\n    const authorized_user = JSON.parse(localStorage.getItem('authorized_user'));\r\n    const { date } = useContext(DayContext)\r\n    const { dispatch } = useContext(ActivityContext)\r\n\r\n    const [newActivity, setNewActivity] = useState({\r\n        title: \"\",\r\n        desc: \"\",\r\n        time: \"\",\r\n        reminder: \"none\",\r\n        activity_id: uuidv4()\r\n    })\r\n\r\n    const [errMsg, setErrMsg] = useState(\"\")\r\n\r\n    const _onChange = (e) => {\r\n        e.persist()        \r\n\r\n        if (errMsg)\r\n            setErrMsg(\"\")\r\n\r\n        setNewActivity(prevState => ({\r\n            ...prevState,\r\n            [e.target.name]: e.target.value\r\n        }))\r\n    }\r\n\r\n    const _onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (newActivity.title === \"\") {\r\n            setErrMsg(\"* Title must not be blank.\")\r\n            const _scrollToTop = window.setInterval(() => {\r\n                console.log('running')\r\n                var pos = window.pageYOffset;\r\n                if (pos > 0) {\r\n                    window.scrollTo(0, pos - 20);\r\n                }\r\n                else\r\n                    window.clearInterval(_scrollToTop);\r\n            }, 16);\r\n        }\r\n\r\n        else {\r\n            /*\r\n                [👌] Add data\r\n\r\n                1. Create an user object (if not existed in local storage).\r\n                2. Loop through the `activities` array object.\r\n                3. If date is found in `activities` array object under `user` object,                   \r\n                   Add it to \r\n                   `data` array of `activities` array object \r\n                   under `user` object.                                   \r\n\r\n            */\r\n\r\n            // Convert date to string \r\n            const dateString = moment(`${date.currentYear}/${date.currentMonth}/${date.currentDay}`).format('YYYY MM DD').split(\" \").join(\"-\");\r\n\r\n            // If user signed in with Gmail\r\n            // Save to cloud\r\n            if (authorized_user && authorized_user.email) {                \r\n\r\n                let reminder_date;\r\n\r\n                if(newActivity.reminder !== \"none\") {\r\n\r\n                    const int_reminderDay = parseInt(newActivity.reminder, 10);    \r\n\r\n                    if(int_reminderDay !== NaN) {\r\n        \r\n                        // HH:MM\r\n                        const hour = newActivity.time.slice(0, 2)\r\n                        const minute = newActivity.time.slice(3, 5)\r\n                                                                  \r\n                        reminder_date = moment(`${dateString} ${hour}:${minute}`, \"YYYY-MM-DD HH:mm\").subtract(newActivity.reminder, 'days').toDate();                                                        \r\n                    }                    \r\n                }\r\n\r\n                const new_activity = {\r\n                    email: authorized_user.email,\r\n                    currentYear: date.currentYear,\r\n                    currentMonth: date.currentMonth,\r\n                    currentDay: date.currentDay,\r\n                    token: authorized_user.token,                    \r\n                    reminder_date,\r\n                    dateString,\r\n                    ...newActivity\r\n                }\r\n\r\n                _addActivityToCloud(new_activity, dispatch)\r\n            }\r\n\r\n            else {\r\n                _addActivityToLocal(newActivity, dateString)               \r\n            }\r\n\r\n            setIsOpen(true);\r\n            setTimeout(() => {\r\n                history.goBack();\r\n            }, 1000);\r\n\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container small-container\">\r\n            <svg onClick={() => history.goBack()} className=\"return-logo neomorphism-logo round\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\" /><path className=\"add-svg\" d=\"M19 11H7.83l4.88-4.88c.39-.39.39-1.03 0-1.42-.39-.39-1.02-.39-1.41 0l-6.59 6.59c-.39.39-.39 1.02 0 1.41l6.59 6.59c.39.39 1.02.39 1.41 0 .39-.39.39-1.02 0-1.41L7.83 13H19c.55 0 1-.45 1-1s-.45-1-1-1z\" /></svg>\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                className=\"modal--success\"\r\n                contentLabel=\"Successfull\"\r\n            >\r\n\r\n                <h2 style={{ marginBottom: \"1em\" }}>Added successfully.</h2>\r\n                <HashLoader color={\"#fff\"} />\r\n                <small style={{ marginTop: \"1em\" }}>Redirecting ...</small>\r\n            </Modal>\r\n\r\n            <form onSubmit={e => _onSubmit(e)} method=\"POST\" autoComplete=\"off\">\r\n                {errMsg && <h2 style={{ margin: \"1em 0\" }}>{errMsg}</h2>}\r\n                <label htmlFor=\"title\">Title</label>\r\n                <input type=\"text\" onChange={e => _onChange(e)} name=\"title\" id=\"title\" />\r\n\r\n                <label htmlFor=\"desc\">Description</label>\r\n                <textarea name=\"desc\" onChange={e => _onChange(e)} id=\"desc\"></textarea>\r\n\r\n                <label htmlFor=\"dt\">Date & Time</label>\r\n                <div className=\"custom-dt inner-shadow\">\r\n                    <strong className=\"big-font bold-font\">{date.currentDay}/{date.currentMonth}/{date.currentYear}</strong>\r\n                    <input type=\"time\" name=\"time\" onChange={e => _onChange(e)} />\r\n                </div>\r\n\r\n                {authorized_user ? (\r\n                    <>\r\n                        <label htmlFor=\"reminder\">Send me notification before</label>\r\n                        <select onChange={e => _onChange(e)} value={newActivity.reminder} name=\"reminder\" id=\"reminder\">                            \r\n                            <option value=\"none\">-</option>\r\n                            <option value=\"1\">1 day</option>\r\n                            <option value=\"2\">2 days</option>\r\n                            <option value=\"3\">3 days</option>\r\n                            <option value=\"4\">4 days</option>\r\n                            <option value=\"5\">5 days</option>\r\n                            <option value=\"6\">6 days</option>\r\n                            <option value=\"7\">7 days</option>\r\n                        </select>\r\n                    </>\r\n                ) : (\r\n                        <>\r\n                            <p className=\"note\">* Please note that all your activities will be saved in your local device only.</p>\r\n                            <div className=\"qna-container\">\r\n                                <strong className=\"question\">Q: How to access on different devices and get notifications?</strong>\r\n                                <p className=\"answer\">A: Scroll to top and click the button with \"Sign In\" text. After signed in, every activities you create will be saved online and we will send you a notification before a week. Don't worry, we hate spams too.</p>\r\n                            </div>\r\n                        </>\r\n                    )}\r\n\r\n                <button type=\"submit\" className=\"neomorphism-logo\">\r\n                    <svg className=\"logo\" viewBox=\"0 0 98 98\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path className=\"add-svg\" d=\"M36.7495 66.15L19.5995 49L13.8828 54.7167L36.7495 77.5834L85.7495 28.5834L80.0328 22.8667L36.7495 66.15Z\" />\r\n                    </svg>\r\n                </button>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateActivityPage\r\n","import React, { useState, useContext } from 'react'\r\nimport '../styles/form.css'\r\nimport { ActivityContext } from '../contexts/ActivityContext'\r\nimport { useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport moment from 'moment'\r\nimport { _editActivityFromLocal } from '../functions/activity/local/activityFunctions'\r\nimport { _editActivityFromCloud } from '../functions/activity/cloud/activityFunctions'\r\n\r\nconst EditActivityPage = (props) => {    \r\n       \r\n    const { id } = props.match.params\r\n    const { history } = props    \r\n    const { dispatch } = useContext(ActivityContext)\r\n        \r\n    const [newActivity, setNewActivity] = useState({\r\n        title: \"\",\r\n        desc: \"\",\r\n        time: \"\",\r\n        reminder: \"none\",\r\n        activity_id: null\r\n    })\r\n\r\n    // local storage data\r\n    const localData = JSON.parse(localStorage.getItem('user'));\r\n    const prevVisitDate = JSON.parse(localStorage.getItem('current_dateInformation'))\r\n\r\n    // cloud data\r\n    const cloudData = JSON.parse(localStorage.getItem('cloud_data'));\r\n\r\n    // authorized user\r\n    const authorized_user = JSON.parse(localStorage.getItem('authorized_user'));\r\n\r\n    useEffect(() => {            \r\n        \r\n\r\n        if(cloudData && cloudData.length > 0) {            \r\n            cloudData.map((activity, index) => {\r\n                if(activity.activity_id === id) {\r\n                    setNewActivity(activity)\r\n                }\r\n\r\n                return activity\r\n            })\r\n        }\r\n        \r\n        else if(localData) {            \r\n            localData.activities.map((activity, index) => {\r\n                if(activity.date_string === prevVisitDate.dateString) {                \r\n                    activity.data.map(item => item.activity_id === id && setNewActivity(item))\r\n                }\r\n                return activity\r\n            })\r\n        }       \r\n        \r\n        return () => console.log('Edit activity page unmounted')\r\n\r\n    }, [])    \r\n\r\n    const [errMsg, setErrMsg] = useState(\"\")\r\n\r\n    const _onChange = (e) => {\r\n        e.persist()\r\n\r\n        if (errMsg)\r\n            setErrMsg(\"\")\r\n\r\n        setNewActivity(prevState => ({\r\n            ...prevState,\r\n            [e.target.name]: e.target.value\r\n        }))\r\n    }\r\n\r\n    const _onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (newActivity.title === \"\") {\r\n            setErrMsg(\"* Title must not be blank.\")\r\n            const _scrollToTop = window.setInterval(() => {\r\n                console.log('running')\r\n                var pos = window.pageYOffset;\r\n                if (pos > 0) {\r\n                    window.scrollTo(0, pos - 20);\r\n                }\r\n                else\r\n                    window.clearInterval(_scrollToTop);\r\n            }, 16);\r\n        }\r\n\r\n        else {            \r\n\r\n            if(cloudData && authorized_user) { \r\n                \r\n                let reminder_date;\r\n\r\n                if(newActivity.reminder !== \"none\") {\r\n\r\n                    const int_reminderDay = parseInt(newActivity.reminder, 10);    \r\n\r\n                    if(int_reminderDay !== NaN) {\r\n        \r\n                        // HH:MM\r\n                        const hour = newActivity.time.slice(0, 2)\r\n                        const minute = newActivity.time.slice(3, 5)\r\n\r\n                        reminder_date = moment(`${newActivity.dateString} ${hour}:${minute}`, \"YYYY-MM-DD HH:mm\").subtract(newActivity.reminder, 'days').toDate();                                                                            \r\n                    }                    \r\n                }\r\n\r\n                const new_activity = {                                                            \r\n                    ...newActivity,                    \r\n                    reminder_date\r\n                }                \r\n                \r\n                // Edit in mongo\r\n                _editActivityFromCloud(new_activity, authorized_user.token, dispatch)\r\n            }\r\n\r\n            else {\r\n                _editActivityFromLocal(localData, prevVisitDate, newActivity)\r\n            }                        \r\n\r\n            setTimeout(() => {\r\n                history.goBack();\r\n            }, 1000);\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container small-container\">        \r\n            <svg onClick={() => history.goBack()} className=\"return-logo neomorphism-logo round\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path className=\"add-svg\" d=\"M19 11H7.83l4.88-4.88c.39-.39.39-1.03 0-1.42-.39-.39-1.02-.39-1.41 0l-6.59 6.59c-.39.39-.39 1.02 0 1.41l6.59 6.59c.39.39 1.02.39 1.41 0 .39-.39.39-1.02 0-1.41L7.83 13H19c.55 0 1-.45 1-1s-.45-1-1-1z\"/></svg>\r\n            <form onSubmit={e => _onSubmit(e)} method=\"POST\" autoComplete=\"off\">\r\n                {errMsg && <h2 style={{ margin: \"1em 0\" }}>{errMsg}</h2>}\r\n                <label htmlFor=\"title\">Title</label>\r\n                <input type=\"text\" value={newActivity.title} onChange={e => _onChange(e)} name=\"title\" id=\"title\" />\r\n\r\n                <label htmlFor=\"desc\">Description</label>\r\n                <textarea name=\"desc\" value={newActivity.desc} onChange={e => _onChange(e)} id=\"desc\"></textarea>\r\n\r\n                <label htmlFor=\"dt\">Date & Time</label>\r\n                <div className=\"custom-dt inner-shadow\">\r\n                    <strong className=\"big-font bold-font\">{prevVisitDate.currentDay}/{prevVisitDate.currentMonth}/{prevVisitDate.currentYear}</strong>\r\n                    <input type=\"time\" value={newActivity.time} name=\"time\" onChange={e => _onChange(e)} />\r\n                </div>\r\n\r\n                {authorized_user && (\r\n                    <>\r\n                        <label htmlFor=\"reminder\">Send me notification before</label>\r\n                        <select value={newActivity.reminder}  onChange={e => _onChange(e)} name=\"reminder\" id=\"reminder\">                            \r\n                            <option value=\"none\">-</option>\r\n                            <option value=\"1\">1 day</option>\r\n                            <option value=\"2\">2 days</option>\r\n                            <option value=\"3\">3 days</option>\r\n                            <option value=\"4\">4 days</option>\r\n                            <option value=\"5\">5 days</option>\r\n                            <option value=\"6\">6 days</option>\r\n                            <option value=\"7\">7 days</option>\r\n                        </select>\r\n                    </>\r\n                )}\r\n\r\n                <button type=\"submit\" className=\"neomorphism-logo\">\r\n                    <svg className=\"logo\" viewBox=\"0 0 98 98\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path className=\"add-svg\" d=\"M36.7495 66.15L19.5995 49L13.8828 54.7167L36.7495 77.5834L85.7495 28.5834L80.0328 22.8667L36.7495 66.15Z\" />\r\n                    </svg>\r\n                </button>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditActivityPage\r\n","import React, { useState, useEffect, useLayoutEffect } from 'react'\r\nimport { withRouter, Route, Switch } from 'react-router-dom'\r\nimport Main from './pages/Main';\r\nimport Detail from './pages/Detail';\r\nimport CreateActivityPage from './pages/CreateActivityPage';\r\nimport EditActivityPage from './pages/EditActivityPage';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst RoutesWrapper = (props) => {  \r\n  \r\n    const [mounted, setMounted] = useState(false)\r\n\r\n    useEffect(() => {\r\n\r\n      setTimeout(() => setMounted(true), 0) \r\n      \r\n      // window.scrollTo({top: 0})\r\n\r\n      // var scrollToTop = window.setInterval(() => {\r\n      //     var pos = window.pageYOffset;\r\n          \r\n      //     // document.body.style.overflowY = 'hidden'\r\n          \r\n      //     if(pos > 0) {            \r\n      //       window.scrollTo(0, pos - 20);\r\n      //     }              \r\n\r\n      //     else {              \r\n      //         // document.body.style.overflowY = 'scroll'\r\n      //         window.clearInterval(scrollToTop);\r\n      //     }\r\n              \r\n      // }, 5)\r\n\r\n    }, [props.location.pathname])    \r\n\r\n    // Animate Main.js \r\n    \r\n    return (      \r\n      <TransitionGroup>\r\n        <CSSTransition appear={true} in={mounted} key={props.location.pathname} timeout={300} unmountOnExit mountOnEnter classNames=\"page-transition\">\r\n          <Switch location={props.location}>\r\n            <Route exact path=\"/\" component={Main} />\r\n            <Route exact path=\"/detail\" component={Detail} />\r\n            <Route exact path=\"/create\" component={CreateActivityPage} />\r\n            <Route exact path=\"/edit/:id\" component={EditActivityPage} />\r\n          </Switch>\r\n        </CSSTransition>\r\n      </TransitionGroup>\r\n    )\r\n  }\r\n  \r\nexport default withRouter(RoutesWrapper)","import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { lightTheme, darkTheme } from './theme/theme';\r\nimport { GlobalStyles } from './global/GlobalStyles'\r\n\r\n// components\r\nimport Navbar from './components/Navbar'\r\n\r\n// router\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport ActivityContextProvider from './contexts/ActivityContext';\r\nimport DayContextProvider from './contexts/DayContext';\r\nimport UserContextProvider from './contexts/UserContext';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport RoutesWrapper from './RoutesWrapper';\r\n\r\nfunction App() {\r\n\r\n  const [theme, setTheme] = useState('light')\r\n\r\n  useEffect(() => {\r\n    const localTheme = localStorage.getItem('defaultTheme');\r\n\r\n    if (localTheme)\r\n      setTheme(localTheme)\r\n\r\n  }, [])\r\n\r\n  const toggleTheme = () => {\r\n    if (theme === 'light') {\r\n      setTheme('dark')\r\n      localStorage.setItem('defaultTheme', 'dark');\r\n    }\r\n    else {\r\n      setTheme('light');\r\n      localStorage.setItem('defaultTheme', 'light');\r\n    }\r\n  }\r\n\r\n  // const routes = [\r\n  //   { path: '/', name: 'Main', Component: Main },\r\n  //   { path: '/detail', name: 'Detail', Component: Detail },\r\n  //   { path: '/create', name: 'CreateActivityPage', Component: CreateActivityPage },\r\n  //   { path: '/edit/:id', name: 'EditActivityPage', Component: EditActivityPage },\r\n  // ]\r\n\r\n  return (\r\n    <ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\r\n      <DayContextProvider>\r\n        <ActivityContextProvider>\r\n          <UserContextProvider>\r\n            <div className=\"App\">\r\n              <GlobalStyles />\r\n              <Router>\r\n                <Navbar toggleTheme={toggleTheme} theme={theme} />\r\n                <RoutesWrapper />\r\n              </Router>\r\n            </div>\r\n          </UserContextProvider>\r\n        </ActivityContextProvider>\r\n      </DayContextProvider>\r\n    </ThemeProvider>\r\n  );\r\n\r\n}\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { gsap } from 'gsap'\r\nimport { CSSPlugin } from 'gsap/CSSPlugin'\r\n\r\ngsap.registerPlugin(CSSPlugin);\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/moon.b2f96543.svg\";","module.exports = __webpack_public_path__ + \"static/media/sun.0cfcc7b9.svg\";"],"sourceRoot":""}